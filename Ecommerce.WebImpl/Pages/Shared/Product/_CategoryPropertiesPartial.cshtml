@using Product = Ecommerce.WebImpl.Pages.Product
@model Ecommerce.WebImpl.Pages.Shared.Product._CategoryPropertiesPartial

<div class="container @(Model.InputNamePrefix!=null?"h-50":"")">
    <script>
        ((s)=>{
            const parent = s.parentElement;
            parent._isEntered = false; // Flag to indicate if any property has been set

            @if (Model.InputNamePrefix != null)
            {
                if (Model.Properties.Count > 0)
                {
                    <text>
                    parent._hasProperties = true;
                    </text>
                }
                foreach (var prop in Model.Properties)
                {
                    <text>
                    // Store property name and type on the parent for later use
                    parent._property_@(prop.PropertyName) = {
                        name: "@(Model.InputNamePrefix)[@(prop.PropertyName)]",
                        isNumber: @(prop.IsNumber.ToString().ToLowerInvariant()),
                        isRequired: @(prop.IsRequired.ToString().ToLowerInvariant()),
                        enumValues: @(prop.EnumValues != null ? System.Text.Json.JsonSerializer.Serialize(prop.EnumValues) : "null")
                    };
                    </text>
                    if (prop.EnumValues != null)
                    {
                        <text>
                        // For dropdowns, update parent._isEntered when a value is selected
                        document.getElementById('@(Model.InputNamePrefix)-@(prop.PropertyName)').addEventListener('change', function() {
                            if (this.value) {
                                parent._isEntered = true;
                                parent._property_@(prop.PropertyName).value = this.value;
                            } else {
                                delete parent._property_@(prop.PropertyName).value;
                                // Re-evaluate _isEntered if this was the only property set
                                parent._isEntered = Array.from(parent.querySelectorAll('select, input')).some(input => input.value);
                            }
                        });
                        </text>
                    }
                    else
                    {
                        <text>
                        // For text/number inputs, update parent._isEntered when a value is entered
                        document.getElementById('@(Model.InputNamePrefix)-@(prop.PropertyName)').addEventListener('input', function() {
                            if (this.value) {
                                parent._isEntered = true;
                                parent._property_@(prop.PropertyName).value = this.value;
                            } else {
                                delete parent._property_@(prop.PropertyName).value;
                                // Re-evaluate _isEntered if this was the only property set
                                parent._isEntered = Array.from(parent.querySelectorAll('select, input')).some(input => input.value);
                            }
                        });
                        </text>
                    }
                }
            }
        })(document.currentScript)
    </script>
    @if (Model.InputNamePrefix!=null){
        if (Model.Properties.Count > 0){
            <input type="hidden" name="@(Model.InputNamePrefix)[@(HomepageModel.HasPropertiesKey)]" value="true"/>
        }
        foreach (var prop in Model.Properties){
            <div class="row">
                <label class="col-1">@prop.PropertyName</label>
                @if (prop.EnumValues != null){
                    <select class="col-auto" id="@(Model.InputNamePrefix)-@(prop.PropertyName)">
                        @if (!prop.IsRequired){
                            <option value="">Seçiniz</option>
                        }
                        @foreach (var val in prop.EnumValues){
                            <option value="@val">@val</option>
                        }
                    </select>    
                }
                else{
                    <input class="col-auto" id="@(Model.InputNamePrefix)-@(prop.PropertyName)" type="@(prop.IsNumber?$"number":$"text")" @(prop.IsRequired?"required":"")/>
                }
            </div>
        }    
    }
    else{
        foreach (var property in Model.Properties){
            <div class="row">
                <b class="col-auto">@property.PropertyName: </b>
                <p id="@(property.PropertyName)Val" class="col-auto">@property.PropertyName</p>
                @if (Model.IsEditable){
                    <a href="javascript:void(0);" onclick="this.previousElementSibling.setAttribute('contenteditable','true');" class="col-auto text-decoration-none bg-white text-secondary"><i class="bi bi-pencil"></i></a>
                }
            </div>
        }
    }
</div>
