@model Ecommerce.WebImpl.Pages.Shared._PromptablePartial
    <form class="gap-3 d-flex text-center align-items-center flex-column promptable card border-0 shadow-sm partial-parent" hx-post="@Model.Url" hx-trigger="submit" hx-target="@Model.Target" hx-swap="innerHTML">
        @Html.AntiForgeryToken()
        <div class="d-none card-body p-4 bg-light rounded">
            @foreach (var input in Model.Inputs){
                if (input.InputType.Equals("select")){
                    <select class="form-select form-select-sm mb-2 border-2 rounded-3">
                        @foreach (var option in input.Options){
                            <option value="@option.value">@option.display</option>
                        }
                    </select>                    
                }
                else{
                <input class="form-control form-control-sm rounded-3 border-2 mb-2 shadow-sm" @(Html.Raw(input.InputType!="hidden"?"onfocusout=\"const btn=event.currentTarget.parentElement.nextElementSibling.nextElementSibling ;if(event.currentTarget.parentElement._inputs.every(e => event.relatedTarget!==e)&& event.relatedTarget != btn)btn._toggle();\"":"")) type="@input.InputType" name="@input.Name" @Html.Raw(input.DefaultValue!=null?"value=\"" + input.DefaultValue + '\"' :"") placeholder="@(input.PlaceHolder??"")"/>
                }
            }
            @if (Model.Description != null){
            <p class="mb-0 text-muted small fst-italic">@Model.Description</p>
            }
        </div>
        <script>
            ((currentScript)=>{
                document.addEventListener("DOMContentLoaded", load);
                currentScript.parentElement.addEventListener('htmx:load',load);
                function load(e){
                    if(e.type === 'htmx:load') e.stopPropagation();
                    const inpts = currentScript.previousElementSibling;
                    inpts._inputs = Array.from(inpts.querySelectorAll('input:not([type="hidden"])'))
                    const btn = currentScript.nextElementSibling;
                    btn._clicked=false;
                    btn._textIdx = 0;
                    btn._displayTexts = [ '@(Model.SwitchText ?? "Onayla")', '@Model.DisplayText']
                    btn._toggle= ()=>{
                        btn.previousElementSibling.previousElementSibling.classList.toggle('d-none');
                        btn.parentElement.parentElement.classList.toggle('z-3') //needs to have position-relative
                        btn.parentElement.parentElement.classList.toggle('overflow-x-hidden')
                        btn._clicked = !btn._clicked
                        btn.innerHTML =btn._displayTexts[btn._textIdx++%2];
                    }
                    console.log('initialized @(nameof(_PromptablePartial)) from ' + e.type);
                }
            })(document.currentScript)      
            //# sourceURL=PromptablePartial.js
        </script>
        <button class="btn btn-primary btn-sm rounded-3 shadow hover-grow fw-semibold px-4 py-2" type="button" class="@Model.Classes" style="background-color: @Model.Color; transition: all 0.2s ease-in-out;"
                onclick="
                        if(event.currentTarget._clicked)
                            event.currentTarget.parentElement.dispatchEvent(new Event('submit', {cancelable:true, bubbles:true}))
                        event.currentTarget._toggle();
                        event.currentTarget.parentElement.querySelector('input:not([type=hidden])').focus();
                        ">
            @Html.Raw(Model.DisplayText)
        </button>
    </form>
