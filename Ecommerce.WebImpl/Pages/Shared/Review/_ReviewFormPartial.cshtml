@using Ecommerce.Entity
@model Ecommerce.WebImpl.Pages.Shared.Review._ReviewFormPartial
@{
    var viewingUser = ViewContext.ViewData[nameof(Entity.User)] as Entity.User;
}
<!--Type:
_setSellerId: function(int)
-->
<div class="mb-4 review-form partial-parent justify-content-center align-content-center align-items-center d-flex flex-column container-fluid " >
    <script>
        ((s) => {
            document.addEventListener("DOMContentLoaded", load);
            s.parentElement.addEventListener("htmx:load", load);
            s.parentElement._setSellerId = function (sellerId) {
                const sidInput = this.querySelector('input[name="@(nameof(Reviews.SentReview)).@(nameof(ProductReview.SellerId))"]');
                sidInput.value = sellerId;
            };
            function load(e) {
                if(e.type === 'htmx:load') {
                    e.stopPropagation();
                }
                const parent = s.parentElement;
                const stars = parent.querySelectorAll('.star-rating');
                const ratingInput = parent.querySelector('.rating-input');
                const collapseBtn= parent.querySelector('button[data-bs-toggle="collapse"]');
                const commentInput = parent.querySelector('textarea[name="@(nameof(Reviews.SentReview)).@(nameof(ProductReview.Comment))"]');
                const collapse = new bootstrap.Collapse(collapseBtn.parentElement.nextElementSibling,{
                    toggle:false,
                });
                const form  = parent.querySelector('form');
                @if(viewingUser!=null){
                    <text>
                    form.addEventListener('submit', e=>{
                        e.preventDefault();
                        const i = form.querySelector('input[name="@(nameof(Reviews.SentReview)).@(nameof(ProductReview.CensorName))"]');
                        const c = form.querySelector('input[type="checkbox"]');
                        i.value = c.value === 'yes';
                    })   
                    </text>
                }
                parent.addEventListener('htmx:afterRequest', e=>{
                    collapseBtn.dispatchEvent(new Event('click', {bubbles: false, cancelable:true}));
                    if(e.detail.xhr.status < 300 && e.detail.xhr.status >= 200) parent.dispatchEvent(new Event('reload', {bubbles: false, cancelable: true}));
                });
                collapseBtn.addEventListener('click',()=>{
                    e.stopPropagation();e.preventDefault();collapse.toggle();
                });
                stars.forEach((star, index) => {
                    star.dataset.clicked = '0';
                    star.addEventListener('click', function() {
;
                        if(star.dataset.clicked==='1'){
                            ratingInput.value = 0;
                            Array.from(stars).forEach(s=>{
                                s.style.color = '#ddd';
                                s.classList.remove('bi-star-fill');
                                s.classList.add('bi-star');
                            })
                            star.dataset.clicked = '0';
                        } else {
                            const rating = index+ 1;
                            ratingInput.value = rating
                            star.dataset.clicked='1';
                            stars.forEach((s, i) => {
                                if (i < rating) {
                                    s.style.color = '#ffc107';
                                    s.classList.remove('bi-star');
                                    s.classList.add('bi-star-fill');
                                } else {
                                    s.style.color = '#ddd';
                                    s.classList.remove('bi-star-fill');
                                    s.classList.add('bi-star');
                                }
                            });
                        }
                    });
                    star.addEventListener('mouseenter', function() {
                        const rating = index + 1;
                        stars.forEach((s, i) => {
                            if (i < rating) {
                                s.style.color = '#ffc107';
                            } else {
                                s.style.color = '#ddd';
                            }
                        });
                    });
                });
                console.log('loaded @(nameof(_ReviewFormPartial)) with ' + e.type);
            }
        })(document.currentScript)
        //# sourceURL=ReviewFormPartial.js
    </script>
    <div>
        <button class="btn  btn-outline-secondary ms-3" style="background-color: darkorange;" type="button" data-bs-toggle="collapse" aria-expanded="false">
            <i class="bi bi-pencil-square me-2"></i>Değerlendirme Yaz
        </button>
    </div>
    <div class="collapse w-100 mt-3">
        <div class="card">
            <div class="card-body">
                <form hx-post="/@nameof(Reviews)" hx-target="#popupResult" hx-swap="innerHTML">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="@(nameof(Reviews.SentReview)).@(nameof(ProductReview.ProductId))" value="@Model.ProductId"/>
                    <input type="hidden" name="@(nameof(Reviews.SentReview)).@(nameof(ProductReview.SellerId))"/>
                    <div class="mb-3">
                        <label class="form-label">Puan</label>
                        <div class="d-flex gap-1 mb-2">
                            @for (int i = 1; i <= 5; i++){
                                <i class="bi bi-star star-rating" data-rating="@i" style="cursor: pointer; font-size: 1.5rem; color: #ddd;"></i>
                            }
                        </div>
                        <input type="hidden" name="@(nameof(Reviews.SentReview)).@(nameof(ProductReview.Rating))" class="rating-input" value="0"/>
                    </div>
                    @if (viewingUser == null){
                        <div class="row">
                            <label class="col-1 col-form-label-sm fs-6 me-0">İsminiz:</label>
                            <input class="col-2 form-control-sm ms-0" type="text" name="@(nameof(Reviews.SentReview)).@(nameof(ProductReview.Name))" required/>
                            <div class="col-9"></div>
                        </div>
                    }
                    <div class="mb-3">
                        <label class="form-label">Yorumunuz</label>
                        <textarea class="form-control" name="@(nameof(Reviews.SentReview)).@(nameof(ProductReview.Comment))" rows="4" placeholder="Ürün hakkındaki deneyiminizi paylaşın..." maxlength="1000" required></textarea>
                    </div>
                    @if (viewingUser != null){
                     
                        <div class="d-flex justify-content-end form-check-inline">
                            <input class="form-check-input" type="hidden" name="@(nameof(Reviews.SentReview)).@(nameof(ProductReview.CensorName))"/>
                            <label class="form-check-label">İsmini Gizle</label>
                            <input class="form-check-input" type="checkbox"/>
                        </div>   
                    }
                    <div class="d-flex justify-content-end">
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-send me-1"></i>Değerlendirmeyi Gönder
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

