@using Ecommerce.Entity
@using Microsoft.AspNetCore.Html
@model _CategoryPicker

<div class="d-flex container">
    @foreach (var category in Model.Categories)
    {
        @RenderCategory(category, true)
    }
</div>

@functions{
    public IHtmlContent RenderCategory(Category category, bool root = false)
    {
        var categoryId = $"category{category.Id}";
        var childrenId = $"{category.Id}Children";
        var inputAssignment = Model.InputId != null ? $"document.getElementById('{Model.InputId}').value='{category.Id}'" : "";

        var categoryHtml = $@"
            <div class=""row collapse {(root ? "show" : "")}"" id=""{categoryId}"">
                <div onclick=""{inputAssignment}"" class=""position-relative p-5 border-1 border-secondary"">
                    <p>{category.Name}</p>
                </div>";

        if (category.Children.Any())
        {
            categoryHtml += $@"
                <i onmouseenter=""document.getElementById('{childrenId}').classList.add('show')"" class=""position-absolute bi bi-arrow-right"" style=""height: 1em;""></i>";
        }

        categoryHtml += $@"
                <div id=""{childrenId}"" onmouseleave=""this.classList.remove('show')"" class=""col-auto collapse"">";

        // Recursively render children within the Razor syntax
        foreach (var child in category.Children)
        {
            categoryHtml += RenderCategory(child).ToString();
        }

        categoryHtml += $@"
                </div>
            </div>";

        return new HtmlString(categoryHtml);
    }
}
