@using System.Globalization
@using Microsoft.AspNetCore.Components
@using Ecommerce.Entity.Common
@using Microsoft.AspNetCore.Html
@model _OrderItemsPartial
<div class="container-fluid partial-parent p-0">
    <script>
        ((s)=>{
            document.addEventListener('DOMContentLoaded', load);
            s.parentElement.addEventListener('htmx:load', load);
            function load(e){
                if(e.type ==='htmx:load'){
                    e.stopPropagation();
                    s.nextElementSibling.firstElementChild.nextElementSibling.querySelectorAll('.promptable').forEach(p=>p.dispatchEvent(new Event('htmx:load',{bubbles:false,cancelable:true})));
                }
                const m = s.parentElement.querySelector('.actions.dropdown-menu')
                if(!m.firstElementChild) m.parentElement.remove();
            }
        })(document.currentScript)
        //# sourceURL=@(nameof(_OrderItemsPartial)).js
    </script>
    <table id="order-table-@(Model.Order.Id)" class="table table-responsive overflow-x-scroll table-striped mb-0 @(Model.IsCollapsable ? "collapse" : "")">
        <thead class="text-center align-middle">
        <tr class="table-striped-columns">
            <th scope="col" colspan="2">
                <p class="fs-5">Resim</p>
            </th>
            <th scope="col" colspan="2">
                <p class="fs-5">Ürün Adı</p>
            </th>
            <th scope="col" colspan="2">
                <p class="fs-5">Satıcı</p>
            </th>
            <th scope="col" colspan="2">
                <p class="fs-5">Fiyat</p>
            </th>
            <th scope="col" colspan="2">
                <p class="fs-5">Kupon</p>
            </th>
            <th scope="col" colspan="2">
                <p class="fs-5">Seçenekler</p>
            </th>
            <th scope="col" colspan="3">
                <p class="fs-5">Teslimat Durumu</p>
            </th>
            <th scope="col" colspan="2">
                <p class="fs-5">İşlemler</p>
            </th>
        </tr>
        </thead>
        <tbody class="text-center pt-3 table-responsive table-striped-columns table-striped align-middle">
        @foreach (var item in Model.Order.Items){
            var p = item.ProductOffer!.Product!;
            <tr class="mt-2">
                <td colspan="2"  class="align-middle text-center">
                    <img class="img-fluid text-center rounded-2 align-middle" src="@(Utils.GetImageUrlOrDefault(p.MainImage?.Data))" alt="Ürün Resmi"/>
                </td>
                <td colspan="2" class="align-middle text-center">
                    <p class="fs-5">@(p.Name)</p>
                </td>
                <td colspan="2" class="align-middle text-center">@item.ProductOffer.Seller.ShopName</td>
                <td colspan="2" class="align-middle text-center">
                    <partial name="Shared/_ItemPricePartial" model="item.Aggregates"/>
                </td>
                <td colspan="2" class="align-middle text-center">
                    @if (item.CouponId != null){
                        <p class="overflow-y-scroll">@(item.CouponId)</p>
                    }
                </td>
                <td colspan="2" class="align-middle text-center p-1">
                    @if (item.SelectedOptions != null && item.SelectedOptions.Any()){
                        <div class="small d-flex flex-column">
                            @{
                                var i = 0;   
                            }
                            @foreach (var option in item.SelectedOptions){
                                var key = option.Property?.CategoryProperty.PropertyName ?? option.Key;
                                // if (i++ > 0){
                                    @* <span>,</span> *@
                                // }
                                <div class="d-inline-flex p-0 m-0 justify-content-start align-content-center align-items-center gap-1">
                                    @if (!string.IsNullOrWhiteSpace(key)){
                                        <span class="p-0 mb-0 text-wrap" style="text-wrap: wrap; word-wrap: break-word;">@(key):</span>
                                    }
                                    <span class="badge border-light border-2 border-opacity-100 bg-secondary-subtle p-1 me-1 fs-6 mb-1">
                                        <b class="p-0 mb-0 fs-5 text-dark">@(option.Value)</b>
                                    </span>    
                                </div>
                                
                            }
                        </div>
                    }
                </td>
                <td colspan="3" class="align-middle text-center">
                    @switch (item.Status){
                        case OrderStatus.Shipped:
                        case OrderStatus.ReturnApproved:
                            var shipment = item.Status == OrderStatus.Shipped ? item.SentShipment : item.RefundShipment;
                            <div>
                                <div>
                                    <i class="bi bi-truck fs-4" style="color: darkorange"></i>
                                    
                                </div>
                                <div class="d-inline-flex">
                                    <p class="fs-6 fw-bold">@item.Status.ToLocalizedString()</p>
                                </div>
                                <div class="d-inline-flex">
                                    <p class="fs-6">Kargo Durumu:</p>
                                    <p class="text-center fs-6 fw-bold">@(shipment.Status.ToLocalizedString())</p>
                                </div>
                                <div class="d-inline-flex align-items-center justify-content-center p-0 gap-1">
                                    @if (shipment.Provider != null){
                                        <p class="fs-6 mb-0">Taşıyıcı:</p>
                                        <p class="fw-bold fs-6 mb-0">@shipment.Provider</p>
                                    }
                                    <a href="https://app.geliver.io/tracking/@(shipment.ApiId)" target="_blank" class="link-primary">
                                        <i class="ms-2 bi fs-5 bi-arrow-up-right-square"></i>
                                    </a>
                                </div>
                            </div>
                            break;
                        default:
                            <p class="mb-0 text-center">@(item.Status.ToLocalizedString())</p>
                            break;
                    }
                </td>
                <td colspan="2" class="align-middle text-center">
                    <div class="btn-group">
                        <button type="button" class="btn btn-primary dropdown-toggle shadow-sm border-1 border-light-subtle border-opacity-50" data-bs-toggle="dropdown" aria-expanded="false">
                            İşlemler
                        </button>
                        <ul class="dropdown-menu actions shadow-sm">
                            @if (Model.ViewedBySeller && item.Status == OrderStatus.WaitingConfirmation){
                                <li>
                                    <form hx-trigger="click" hx-post="/Seller?handler=cancelOrder" class="m-0" hx-swap="innerHTML" hx-target="#popupResult">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="@(nameof(Orders.ProductId))" value="@item.ProductId"/>
                                        <input type="hidden" name="@(nameof(Orders.SellerId))" value="@item.SellerId"/>
                                        <input type="hidden" name="@nameof(Orders.OrderId)" value="@item.OrderId"/>
                                        <button type="button" class="dropdown-item text-danger">
                                            Siparişi Reddet
                                        </button>
                                    </form>
                                </li>
                                <li>
                                    <form hx-trigger="click" hx-post="/Seller?handler=confirmOrder" class="m-0" hx-swap="innerHTML" hx-target="#popupResult">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="@(nameof(Orders.ProductId))" value="@item.ProductId"/>
                                        <input type="hidden" name="@(nameof(Orders.SellerId))" value="@item.SellerId"/>
                                        <input type="hidden" name="@nameof(Orders.OrderId)" value="@item.OrderId"/>
                                        <button type="button" class="dropdown-item text-success">
                                            Siparişi Onayla
                                        </button>
                                    </form>
                                </li>
                            }
                            @if (Model.ViewedBySeller && item.Status == OrderStatus.WaitingShipment){
                                <li>
                                    <form hx-trigger="click" hx-post="/Seller?handler=confirmShipment" hx-swap="innerHTML" hx-target="#popupResult">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="@(nameof(Orders.ProductId))" value="@item.ProductId"/>
                                        <input type="hidden" name="@(nameof(Orders.SellerId))" value="@item.SellerId"/>
                                        <input type="hidden" name="@nameof(Orders.OrderId)" value="@item.OrderId"/>
                                        <input type="hidden" name="token" value="@Model.Token"/>
                                        <button type="button" class="dropdown-item text-primary-emphasis">
                                            Teslimat Bildir
                                        </button>
                                    </form>
                                </li>
                            }
                            @if (Model.ViewedBySeller && item.Status == OrderStatus.ReturnRequested){
                                <li>
                                    <form hx-trigger="click" hx-post="/Seller?handler=acceptRefund" hx-swap="innerHTML" hx-target="#popupResult">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="@(nameof(Orders.ProductId))" value="@item.ProductId"/>
                                        <input type="hidden" name="@(nameof(Orders.SellerId))" value="@item.SellerId"/>
                                        <input type="hidden" name="@nameof(Orders.OrderId)" value="@item.OrderId"/>
                                        <input type="hidden" name="token" value="@Model.Token"/>
                                        <button type="button" class="dropdown-item text-primary-emphasis">
                                            İadeyi Kabul Et
                                        </button>
                                    </form>
                                </li>
                                <li>
                                    <form hx-trigger="click" hx-post="/Seller?handler=denyRefund" hx-swap="innerHTML" hx-target="#popupResult">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="@(nameof(Orders.ProductId))" value="@item.ProductId"/>
                                        <input type="hidden" name="@(nameof(Orders.SellerId))" value="@item.SellerId"/>
                                        <input type="hidden" name="@nameof(Orders.OrderId)" value="@item.OrderId"/>
                                        <input type="hidden" name="token" value="@Model.Token"/>
                                        <button type="button" class="dropdown-item text-primary-emphasis">
                                            İadeyi Reddet
                                        </button>
                                    </form>
                                </li>
                            }
                            @if (item.Status == OrderStatus.Shipped || item.Status == OrderStatus.ReturnApproved){
                                <li>
                                    <form hx-trigger="click" hx-post="/@(nameof(Orders))?handler=progressShipment" hx-swap="innerHTML" hx-target="#popupResult" class="m-0">
                                        @Html.AntiForgeryToken()
                                        @if (Model.Token != null){
                                            <input type="hidden" name="token" value="@(Model.Token)"/>
                                        }
                                        <input type="hidden" name="@(nameof(Orders.ReturnShipment))" value="@(item.Status ==OrderStatus.ReturnApproved)"/>
                                        <input type="hidden" name="@(nameof(Orders.ProductId))" value="@item.ProductId"/>
                                        <input type="hidden" name="@(nameof(Orders.SellerId))" value="@item.SellerId"/>
                                        <input type="hidden" name="@nameof(Orders.OrderId)" value="@item.OrderId"/>
                                        <button type="button" class="dropdown-item d-inline-flex bg-primary-subtle">Teslimatı Hızlandır<p style="font-size: x-small" class="text-muted fs-6">  (Hile)</p></button>
                                    </form>
                                </li>
                            }
                            @if (!Model.ViewedBySeller && item.Status < OrderStatus.Shipped){
                                <li>
                                    <form hx-trigger="click" hx-post="/@(nameof(Orders))?handler=cancelItem" hx-swap="innerHTML" hx-target="#popupResult" class="m-0">
                                        @if (Model.Token != null){
                                            <input type="hidden" name="token" value="@Model.Token"/>
                                        }
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="@(nameof(Orders.ProductId))" value="@item.ProductId"/>
                                        <input type="hidden" name="@(nameof(Orders.SellerId))" value="@item.SellerId"/>
                                        <input type="hidden" name="@nameof(Orders.OrderId)" value="@item.OrderId"/>
                                        <button type="button" class="dropdown-item text-danger">
                                            İptal Et
                                        </button>
                                    </form>
                                </li>
                            }
                            @if (!Model.ViewedBySeller && item.Status == OrderStatus.Delivered){
                                <li>
                                    <form hx-trigger="click" hx-post="/@nameof(Orders)?handler=confirm" hx-swap="innerHTML" hx-target="#popupResult" class="m-0">
                                        @Html.AntiForgeryToken()
                                        @if (Model.Token != null){
                                            <input type="hidden" name="token" value="@Model.Token"/>
                                        }
                                        <input type="hidden" name="@(nameof(Orders.ProductId))" value="@item.ProductId"/>
                                        <input type="hidden" name="@(nameof(Orders.SellerId))" value="@item.SellerId"/>
                                        <input type="hidden" name="@nameof(Orders.OrderId)" value="@item.OrderId"/>
                                        <button type="button" class="dropdown-item text-success">
                                            Teslimatı Onayla
                                        </button>
                                    </form>
                                </li>
                            }
                            @if (!Model.ViewedBySeller && (item.Status & (OrderStatus.Delivered | OrderStatus.Complete)) != 0){
                                <li>
                                    <form hx-trigger="click" hx-post="/@nameof(Orders)?handler=refund" hx-swap="innerHTML" hx-target="#popupResult" class="m-0">
                                        @Html.AntiForgeryToken()
                                        @if (Model.Token != null){
                                            <input type="hidden" name="token" value="@Model.Token"/>
                                        }
                                        <input type="hidden" name="@(nameof(Orders.ProductId))" value="@item.ProductId"/>
                                        <input type="hidden" name="@(nameof(Orders.SellerId))" value="@item.SellerId"/>
                                        <input type="hidden" name="@nameof(Orders.OrderId)" value="@item.OrderId"/>
                                        <button data-bs-toggle="tooltip" title="Satıcıdan Ürünü Geri Almasını İsteyebilirsin." type="button" class="dropdown-item text-warning">
                                            İade Talebi Oluştur.
                                        </button>
                                    </form>
                                </li>
                            }
                        </ul>
                    </div>
                </td>
            </tr>
        }
        </tbody>
    </table>
</div>
