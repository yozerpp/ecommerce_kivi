@using System.Globalization
@using System.Text.Encodings.Web
@using System.Text.Json
@using Bogus.DataSets
@using Ecommerce.Entity.Common
@using Microsoft.AspNetCore.Html
@using Microsoft.IdentityModel.Abstractions
@using Stripe.Terminal
@model Ecommerce.WebImpl.Pages.Shared.Order._OrderPartial
@{
    IHtmlContent OrderHeadingItem((string, string, int) v) => Html.Raw($""""
                                                                            <li class="list-group-item rounded-bottom-0 col-{v.Item3} d-inline-flex flex-column justify-content-start overflow-hidden">
                                                                                <p class="fs-5 h-50">{v.Item2}</p>
                                                                            </li>
                                                                        """");
}
<div class="partial-parent">
    <script>
        ((s)=>{
            document.addEventListener("DOMContentLoaded", load);
            s.parentElement.addEventListener('htmx:load', load);
            function load(e){
                if(e.type==='htmx:load'){
                    e.stopPropagation();
                    s.nextElementSibling.lastElementChild.dispatchEvent(new Event('htmx:load', {bubbles:false ,cancelable:true}));
                    const tt = s.nextElementSibling.querySelector('button[data-bs-toggle="tooltip"]');
                    if(!tt) return;
                    const toggle = new bootstrap.Tooltip(tt, {toggle: false});
                    tt.addEventListener('mouseover', e=>toggle.show());
                    tt.addEventListener('mouseout', e=>toggle.hide());
                }
                console.log("initialized @(nameof(_OrderPartial)) from " + e.type);
            }
        })(document.currentScript)
        //# sourceURL=@(nameof(_OrderPartial)).js
    </script>
    <div class="border rounded-3 mb-3 shadow-sm bg-white">
        <div class="row mx-0 align-items-center border-bottom bg-light rounded-top-3 py-2">
            <div class="col-11">
                <a class="hover-darken text-decoration-none text-black" style="cursor: @(Model.Collapsable ? "pointer" : "default")" data-bs-toggle="@(Model.Collapsable ? "collapse" : "")" data-bs-target="#order-table-@(Model.Order.Id)" aria-controls="order-table-@(Model.Order.Id)" aria-expanded="false">
                    <ul class="list-group-horizontal row px-0 mx-0">
                        @OrderHeadingItem(("", Model.Order.Id.ToString(), 1))
                        @OrderHeadingItem(("", Model.Order.Date.ToString("g", CultureInfo.CurrentCulture), 2))
                        @OrderHeadingItem(("", Model.Order.Status.ToLocalizedString(), 4))
                        @OrderHeadingItem(("", Model.Order.ShippingAddress.ToString(), 4))
                        @OrderHeadingItem(("", Model.Order.Aggregates.ItemCount.ToString(), 1))
                    </ul>
                </a>
            </div>
            <div class="d-inline-flex flex-column justify-content-center col-1 gap-2 text-center align-middle">
            @if ((Model.Order.Status & (OrderStatus.WaitingPayment | OrderStatus.WaitingConfirmation)) !=0 || Model.Order.Items.All(i => (int)i.Status <= (int)OrderStatus.WaitingConfirmation)){
                var title = Model.ViewedBySeller ? "Siparişte sana ait olan tüm ürünleri iptal et." : "Henüz hiçbir satıcı siparişindeki ürünleri onaylamadığı için ekibimizden iptal etmesini isteyebilrsin.";
                var url = Model.ViewedBySeller ? "/" + nameof(Seller) + "?handler=cancelOrder": "/" +nameof(Orders) + "?handler=cancel";
                <div>
                    <form  hx-post="/@(url)" hx-trigger="click" hx-target="#popupResult" hx-swap="innerHTML" hx-on::after-request="if(event.detail.successful)event.detail.elt.remove();">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="token" value="@Model.Token"/>
                        <input type="hidden" name="@(nameof(Orders.OrderId))" value="@Model.Order.Id"/>
                        <button type="submit" data-bs-toggle="tooltip" title="@title" class="btn hover-grow-small btn-sm btn-danger">İptal Talep Et</button>
                    </form>
                </div>
            }
            @* @{ var addressInputs = new List<InputModel>([ *@
            @*        new(nameof(Orders.OrderId), "hidden", Model.Order.Id.ToString()), *@
            @*        new(string.Join('.', nameof(Orders.NewAddress), nameof(Address.Line1)), defaultValue: Model.Order.ShippingAddress.Line1, placeHolder: "Birinci Satır"), *@
            @*        new(string.Join('.', nameof(Orders.NewAddress), nameof(Address.Line2)), defaultValue: Model.Order.ShippingAddress.Line2, placeHolder: "İkinci Satır"), *@
            @*        new(string.Join('.', nameof(Orders.NewAddress), nameof(Address.District)), defaultValue: Model.Order.ShippingAddress.District, placeHolder: "İlçe"), *@
            @*        new(string.Join('.', nameof(Orders.NewAddress), nameof(Address.City)), defaultValue: Model.Order.ShippingAddress.City, placeHolder: "Şehir"), *@
            @*        new(string.Join('.', nameof(Orders.NewAddress), nameof(Address.Country)), defaultValue: Model.Order.ShippingAddress.Country, placeHolder: "Ülke"), *@
            @*        new(string.Join('.', nameof(Orders.NewAddress), nameof(Address.ZipCode)), defaultValue: Model.Order.ShippingAddress.ZipCode, placeHolder: "Posta Kodu") *@
            @*    ]); *@
            @* if (Model.Token != null) addressInputs.Add(new InputModel("token", "hidden", Model.Token)); *@
            @* } *@
            @* @await Html.PartialAsync("Shared/_PromptablePartial", new _PromptablePartial(){ *@
            @*     DisplayText = "Teslimat Adresini Değiştir", Description = "Henüz Kargolanmamış öğelerin teslimat adresleri değiştirilecek.",  Target = "#popupResult", Inputs = addressInputs.ToArray(), Url = Url.Page(nameof(Orders), "changeAddress"), Classes = "dropdown-item", FormClasses = "m-0", *@
            @* }) *@
            </div>
        </div>
        @await Html.PartialAsync("Shared/Order/_OrderItemsPartial", new _OrderItemsPartial(){
            IsCollapsable = Model.Collapsable, Order = Model.Order, Token = Model.Token,ViewedBySeller = Model.ViewedBySeller   
        })
    </div>
</div>
