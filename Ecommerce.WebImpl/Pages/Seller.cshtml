@page
@using Ecommerce.Entity.Common
@using Ecommerce.WebImpl.Pages.Seller
@using Ecommerce.WebImpl.Pages.Shared
@using Org.BouncyCastle.Crypto.Engines
@model Ecommerce.WebImpl.Pages.SellerModel
@{
    var editable = Model.CurrentSeller?.Id == Model.ViewedSeller.Id;
}

<script>
    let editables;
    document.addEventListener('DOMContentLoaded', function() {
        editables = document.querySelectorAll('.edit-control');
    });
</script>
<div class="container-fluid bg-light py-4">
    <div class="container">
        <!-- Seller Header Card -->
        <div class="card shadow-sm mb-4 ">
            @if (editable){
                <div class="container-fluid d-flex gap-3 justify-content-end pt-3 pe-5">
                    <button onclick="document.getElementById('editForm').dispatchEvent(new Event('submit', {cancelable:true, bubbles:true}))" class="btn  edit-control btn-success" >Değişiklikleri Kaydet</button>
                    
                    <button onclick="editables.forEach(e=>e.classList.toggle('edit-control'))" class="btn-primary btn">Bilgilerini Düzenle</button>
                </div>
            }
            <div class="card-body">
                <div class="row align-items-center">
                    <div class="col-md-8">
                        <div class="d-flex align-items-center mb-3">
                            <h1 id="shopNameField" class="display-6 fw-bold text-primary mb-0 me-3">@Model.ViewedSeller.ShopName</h1>
                            @if (editable){
                                @await Html.PartialAsync("Shared/_EditablePartial", new _EditablePartial(){
                                })
                            }
                        </div>

                        <div class="row mb-3">
                            <div class="col-auto">
                                <div class="d-flex align-items-center">
                                    <span class="h4 text-warning me-2">@decimal.Round(Model.ViewedSeller.Stats.ReviewAverage, 2).ToString("F")</span>
                                    <i class="bi bi-star-fill text-warning fs-5"></i>
                                </div>
                            </div>
                            <div class="col-auto">
                                <span class="text-muted">(@Model.ViewedSeller.Stats.ReviewCount değerlendirme)</span>
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-12">
                                <div class="d-flex align-items-center">
                                    <strong class="me-2">E-posta:</strong>
                                    <span id="emailField" class="me-2">@Model.ViewedSeller.Email</span>
                                    @if (editable){
                                        @await Html.PartialAsync("Shared/_EditablePartial", new _EditablePartial())
                                    }
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="row g-3">
                            <div class="col-6">
                                <div class="text-center p-3 bg-primary bg-opacity-10 rounded">
                                    <div class="h4 text-primary mb-1">@Model.ViewedSeller.Stats.OfferCount</div>
                                    <small class="text-muted">Ürün</small>
                                </div>
                            </div>
                            <div class="col-6">
                                <div class="text-center p-3 bg-success bg-opacity-10 rounded">
                                    <div class="h4 text-success mb-1">@Model.ViewedSeller.Stats.SaleCount</div>
                                    <small class="text-muted">Satış</small>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Contact Information -->
                <div class="row mt-4">
                    <div class="col-md-6">
                        <h6 class="text-muted mb-2">Adres Bilgileri</h6>
                        <partial name="Shared/_AddressPartial" model="new _AddressPartial(){ Address = @Model.ViewedSeller.Address!, Editable = editable }"/>
                    </div>
                    <div class="col-md-6">
                        <h6 class="text-muted mb-2">İletişim</h6>
                        <partial name="Shared/_PhoneNumberPartial" model="new _PhoneNumberPartial(){ PhoneNumber = Model.ViewedSeller.PhoneNumber, Editable = editable }"/>
                    </div>
                </div>
            </div>
        </div>
        <form id="editForm" hx-trigger="go" hx-post="/Seller?handler=edit">
            @Html.AntiForgeryToken()
            <input type="hidden" name="@(nameof(Model.ViewedSeller)).Id" value="@(Model.ViewedSeller.Id)"/>
            <input type="hidden" name="@(nameof(Model.ViewedSeller)).@(nameof(Entity.Seller.FirstName))" value="@(Model.ViewedSeller.FirstName)"/>
            <input type="hidden" name="@(nameof(Model.ViewedSeller)).@(nameof(Entity.Seller.LastName))" value="@(Model.ViewedSeller.LastName)"/>
            <input type="hidden" name="@(nameof(Model.ViewedSeller)).@nameof(Model.ViewedSeller.ShopName)" id="ShopNameInput" value="@(Model.ViewedSeller.ShopName)"/>
            <input type="hidden" name="@(nameof(Model.ViewedSeller)).@(nameof(Model.ViewedSeller.Email))" id="EmailInput" value="@(Model.ViewedSeller.Email)"/>
            <input type="hidden" name="@(nameof(Model.ViewedSeller)).@($"{nameof(Model.ViewedSeller.Address)}.{nameof(Address.Line1)}")" id="AddressLine1Input" value="@(Model.ViewedSeller.Address.Line1)"/>
            <input type="hidden" name="@(nameof(Model.ViewedSeller)).@($"{nameof(Model.ViewedSeller.Address)}.{nameof(Address.Line2)}")" id="AddressLine2Input" value="@(Model.ViewedSeller.Address.Line1)"/>
            <input type="hidden" name="@(nameof(Model.ViewedSeller)).@($"{nameof(Model.ViewedSeller.Address)}.{nameof(Address.District)}")" id="AddressNeighborhoodInput" value="@(Model.ViewedSeller.Address.District)"/>
            <input type="hidden" name="@(nameof(Model.ViewedSeller)).@($"{nameof(Model.ViewedSeller.Address)}.{nameof(Address.Country)}")" id="AddressStateInput" value="@(Model.ViewedSeller.Address.Country)"/>
            <input type="hidden" name="@(nameof(Model.ViewedSeller)).@($"{nameof(Model.ViewedSeller.Address)}.{nameof(Address.City)}")" id="AddressCityInput" value="@(Model.ViewedSeller.Address.City)"/>
            <input type="hidden" name="@(nameof(Model.ViewedSeller)).@($"{nameof(Model.ViewedSeller.Address)}.{nameof(Address.ZipCode)}")" id="AddressZipCodeInput" value="@(Model.ViewedSeller.Address.ZipCode)"/>
            <input type="hidden" name="@(nameof(Model.ViewedSeller)).@($"{nameof(Model.ViewedSeller.PhoneNumber)}.{nameof(PhoneNumber.CountryCode)}")" id="PhoneNumberCountryCodeInput" value="@(Model.ViewedSeller.PhoneNumber.CountryCode)"/>
            <input type="hidden" name="@(nameof(Model.ViewedSeller)).@($"{nameof(Model.ViewedSeller.PhoneNumber)}.{nameof(PhoneNumber.Number)}")" id="PhoneNumberNumberInput" value="@(Model.ViewedSeller.PhoneNumber.Number)"/>
        </form>
        <!-- Navigation Tabs -->
        <ul class="nav nav-pills nav-fill mb-4" id="sellerTabs" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="coupons-tab" data-bs-toggle="pill" data-bs-target="#coupons" type="button" role="tab">
                    <i class="bi bi-ticket-perforated me-2"></i>Kuponlar
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="offers-tab" data-bs-toggle="pill" data-bs-target="#offersSection" type="button" role="tab">
                    <i class="bi bi-box-seam me-2"></i>Ürünler
                </button>
            </li>
            @if (editable){
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="orders-tab" data-bs-toggle="pill" data-bs-target="#ordersSection" type="button" role="tab">
                        <i class="bi bi-bag me-2"></i>Siparişler
                    </button>
                </li>
            }
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="reviews-tab" data-bs-toggle="pill" data-bs-target="#reviewsSection" type="button" role="tab">
                    <i class="bi bi-star"></i>Değerlendirmeler
                </button>
            </li>
        </ul>

        <!-- Tab Content -->
        <div class="tab-content" id="sellerTabsContent">
            <!-- Coupons Tab -->
            <div class="tab-pane fade show active" id="coupons" role="tabpanel">
                <div class="card shadow-sm">
                    <div class="card-header">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-ticket-perforated me-2"></i>Satıcı Kuponları
                        </h5>
                    </div>
                    <div class="card-body">
                        @if (Model.ViewedSeller.Coupons.Count == 0){
                            <div class="text-center py-5">
                                <i class="bi bi-ticket-perforated display-1 text-muted"></i>
                                <p class="text-muted mt-3">Satıcının listelenmiş kuponu bulunmuyor.</p>
                            </div>
                        }else{
                            if (editable){
                                @await Html.PartialAsync("Shared/_PromptablePartial", new _PromptablePartial{
                                    Inputs =[
                                        new("İndirim Oranı",
                                            inputType: "text",
                                            defaultValue: "0"),
                                        new("Son Kullanma Tarihi",
                                            inputType: "date",
                                            placeHolder: "GG/AA/YYYY",
                                            defaultValue: DateTime.Now.AddDays(7)
                                                .ToString("d"))
                                    ],
                                    DisplayText = "Kupon Ekle",
                                    Url = "/Seller?handler=addCoupon",
                                })
                            }

                            @await Html.PartialAsync("Shared/_CouponsPartial", new _CouponsPartial(){
                                Coupons = Model.ViewedSeller.Coupons,ShowSeller = false, Editable = editable
                            })
                        }
                    </div>
                </div>
            </div>

            <!-- Products Tab -->
            <div class="tab-pane fade" id="offersSection" role="tabpanel">
                <div class="card shadow-sm">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-box-seam me-2"></i>Ürün İlanları
                        </h5>
                        @if (editable){
                            <a asp-page="Seller/AddProduct" class="btn btn-primary btn-sm">
                                <i class="bi bi-plus-circle me-1"></i>Yeni Ürün Ekle
                            </a>
                        }
                    </div>
                    <div class="card-body">
                        <div id="offers" hx-get="/Seller?handler=offers&Id=@(Model.Id)" hx-trigger="load" hx-swap="outerHTML" hx-target="this"></div>
                    </div>
                </div>
            </div>
            
            <!-- Orders Tab -->
            @if (editable){
                <div class="tab-pane fade" id="ordersSection" role="tabpanel">
                    <div class="card shadow-sm">
                        <div class="card-header">
                            <h5 class="card-title mb-0">
                                <i class="bi bi-bag me-2"></i>Siparişler
                            </h5>
                        </div>
                        <div class="card-body">
                            <div id="orders" hx-get="/Seller?handler=orders&@(nameof(SellerModel.Id))=@(Model.ViewedSeller.Id)" hx-trigger="load" hx-swap="outerHTML" hx-target="this"></div>
                        </div>
                    </div>
                </div>
            }


            <!-- Reviews Tab -->
            <div class="tab-pane fade" id="reviewsSection" role="tabpanel">
                <div class="card shadow-sm">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-star me-2"></i>Müşteri Değerlendirmeleri
                        </h5>
                        <form id="reviewsPageForm" method="get" hx-trigger="submit" hx-get="/@(nameof(Reviews))" hx-target="#reviews" hx-swap="innerHTML" class="d-flex align-items-center">
                            <input type="hidden" name="@(nameof(Reviews.ReviewsPage))" value="@(Model.ReviewsPage)"/>
                            <input type="hidden" name="@(nameof(Reviews.SellerId))" value="@(Model.Id)"/>
                            <label class="form-label me-2 mb-0">Sayfa boyutu:</label>
                            <select onchange="document.getElementById('reviewsPageForm').dispatchEvent(new Event('submit', {cancelable:true, bubbles:true}))" class="form-select form-select-sm" name="@(nameof(Reviews.PageSize))" style="width: auto;">
                                @{ var ar = new int[]{ 20, 10, 50, 100 }; }
                                @for (int i = 0; i < ar.Length; i++){
                                    <option selected="@(Model.ReviewsPageSize == ar[i])" value="@(ar[i])">@(ar[i])</option>
                                }
                            </select>
                        </form>
                    </div>
                    <div class="card-body">
                        <div id="reviews" hx-target="this" hx-on::after-request="if(event.detail.xhr.status===204)event.currentTarget.firstElementChild.classList.remove('d-none');" hx-get="/@(nameof(Reviews))?@(nameof(Reviews.SellerId))=@(Model.ViewedSeller.Id)&@(nameof(Reviews.Page))=@(Model.ReviewsPage)&@(nameof(Reviews.PageSize))=@(Model.ReviewsPageSize)" hx-trigger="load" hx-swap="innerHTML">
                            <h3 class="d-none fs-4 fw-bold text-center mt-2 w-100">Henüz Değerlendirme Yok.</h3>
                        </div>
                    
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts{
    <script>
    document.addEventListener('DOMContentLoaded', function() {
        const editForm = document.getElementById('editForm');
        if (editForm) {
            editForm.addEventListener('submit', function(event) {
                event.preventDefault(); // Prevent default form submission

                // Update hidden input values from displayed elements
                document.getElementById('ShopNameInput').value = document.getElementById('shopNameField').innerHTML;
                document.getElementById('EmailInput').value = document.getElementById('emailField').innerHTML;

                // Update Address fields - Corrected IDs and access to .value
                // The _AddressPartial uses IDs like Address.Line1_ when Editable is true
                document.getElementById('AddressLine1Input').value = document.getElementById('@(nameof(Address.Line1))_').innerHTML;
                document.getElementById('AddressLine2Input').value = document.getElementById('@(nameof(Address.Line2))_').innerHTML;
                document.getElementById('AddressNeighborhoodInput').value = document.getElementById('@(nameof(Address.District))_').innerHTML;
                document.getElementById('AddressStateInput').value = document.getElementById('@(nameof(Address.Country))_').innerHTML;
                document.getElementById('AddressCityInput').value = document.getElementById('@(nameof(Address.City))_').innerHTML;
                document.getElementById('AddressZipCodeInput').value = document.getElementById('@(nameof(Address.ZipCode))_').innerHTML;
                

                // Update Phone Number fields
                // The _PhoneNumberPartial uses IDs like PhoneNumber.CountryCode_ when Editable is true
                document.getElementById('PhoneNumberCountryCodeInput').value = document.getElementById('@(nameof(PhoneNumber.CountryCode))').innerHTML;
                document.getElementById('PhoneNumberNumberInput').value = document.getElementById('@(nameof(PhoneNumber.Number))').innerHTML;

                // Trigger HTMX submit
                htmx.trigger(editForm, 'go');
            });
        }
        
    });
</script>
}
