@page
@using Ecommerce.Entity
@using Ecommerce.WebImpl.Pages.Account
@using Ecommerce.WebImpl.Pages.Shared
@model Ecommerce.WebImpl.Pages.Customer
@{
    ViewData["Title"] = Model.CurrentCustomer!=null?"Hesabınız": Model.ViewedCustomer.FullName+" Kullanıcısının Profili";
    ViewData["BgColor"] = "bg-primary";
    ViewBag.User = Model.CurrentUser;
    var isOwner = Model.CurrentCustomer?.Id == Model.ViewedCustomer.Id;
    var editable = isOwner || (Model.CurrentStaff?.HasPermission(Permission.EditUser) ?? false);
    var deletable = Model.CurrentStaff?.HasPermission(Permission.DeleteUser) ?? false;
}
@section Scripts{
    <script src="https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js"></script>
    <script>
        let profilePic;
        document.addEventListener("DOMContentLoaded", ()=>{
            profilePic = document.getElementById('profilePic');
        });
        let imageDeleted = false;
        function assignAddressInputs(){
            @Utils.GenerateAssignAddressInputsFunction(Model.ViewedCustomer.Addresses.Count)
        }
        let editableProfileElements; 
        document.addEventListener("DOMContentLoaded", ()=>{
            editableProfileElements = document.querySelectorAll('#profil@(Model.CustomerId) .edit-control');  
        });
        let scrollSpy;
        document.addEventListener("DOMContentLoaded", ()=>{
            scrollSpy = new bootstrap.ScrollSpy(document.body, {
                target: '#accountPageNav',
            });
        });
    </script>
}
@{
     var fieldIdPrefix = "customer-";
}
<div class="container-fluid gap-2">
    <div class="card bg-white">
        <div class="align-content-center bg-white gap-4 align-items-center justify-content-end card-header container-fluid d-flex">
        <div class="d-inline-flex gap-2 fs-1 card-title fw-bolder">
            <p class="my-0">@Model.ViewedCustomer.FirstName</p>
            <p class="my-0">@(Model.ViewedCustomer.LastName)</p>
        </div>
        <div class="d-flex p-0 align-content-start align-items-start">
            @if (Model.ViewedCustomer.ProfilePicture?.Data != null){
                <img class="card-img rounded-circle" src="@(Utils.GetImageUrlOrDefault(Model.ViewedCustomer.ProfilePicture?.Data, false))" alt="Profile Resmi" style="height: 100px; width: 100px;">
            }
            else{
                <img src="user-icon.svg" style="height: 10rem; width: 10rem;" alt="Profil Resmi"/>
            }
        </div>
        </div>
    </div>
    <div class="border-bottom border-2 border-black my-5 mx-2"></div>
    <div class="container-fluid position-relative row g-5 py-2 ms-3">
        <nav id="accountPageNav" class="col-2 list-group h-100 position-sticky top-50 sticky-top card card-header p-0 rounded-2" style="margin-top: 7em;">
            <a id="statistics-nav" href="#statistics-tab" class="list-group-item nav-link hover-bold text-decoration-none fs-4 p-2">
                İstatistikler
            </a>
            <a id="profile-nav" href="#profile-tab" class="list-group-item hover-bold nav-link text-decoration-none fs-4 p-2">
                Profil
            </a>
            @if (editable){
                <a id="security-nav" href="#security-tab" class="list-group-item hover-bold nav-link text-decoration-none fs-4 p-2"
                   data-bs-toggle="tab">
                    Güvenlik
                </a>
                <a id="orders-nav" href="#orders-tab" class="list-group-item hover-bold text-decoration-none fs-4 p-2"
                   data-bs-toggle="tab">
                    @(Model.CurrentCustomer != null ? "Siparişlerim" : "Siparişler")
                </a>
            }
        </nav>
        <div class="col-1"></div>
        <div class="col-9 gap-5 d-flex flex-grow-1 flex-column">
            <div id="statistics-tab" data-nav="#statistics-nav">
                <h3 class="text-center container-fluid fw-bold">İstatistik</h3>
                <div class="card-body">
                </div>
            </div>
            <div id="profile-tab" data-nav="#profile-nav"  data-editing="0">
                <div class="card-title row mx-4 justify-content-center">
                    <div class="col-5"></div>
                    <h3 class="col-2 mb-4 container-fluid text-center fw-bold">Profil</h3>
                    <div class="col-4"></div>
                    <div class="col-1">
                        @if (editable){
                            <button id="profileEditBtn" class="btn btn-info text-white rounded-1 shadow-sm"
                                    onclick="if(document.getElementById('profile-tab').dataset.editing=='0'){
                                        event.currentTarget.innerHTML='İptal';
                                        document.getElementById('profile-tab').dataset.editing='1';
                                    } else {
                                        event.currentTarget.innerHTML = 'Düzenle';
                                        document.getElementById('profile-tab').dataset.editing='0';
                                    }
                                    editableProfileElements.forEach(e=>e.classList.toggle('edit-control'));
                                    event.currentTarget.classList.toggle('btn-info');
                                    event.currentTarget.classList.toggle('btn-danger');
                                    document.getElementById('profileSaveButton').classList.remove('d-none');">Düzenle</button>
                        }
                    </div>
                </div>
                @await Html.PartialAsync("Account/_ProfilePartial", new _ProfilePartial(){
                    Editable = editable, User = Model.ViewedCustomer, IsOwner = isOwner
                })
                <div class="g-1 mt-3 text-center justify-content-center align-content-center row">
                    <button id="profileSaveButton" onclick="document.getElementById('profile-tab').dataset.editing='0'; 
                        event.currentTarget.classList.add('d-none');
                        document.getElementById('profil@(Model.CustomerId)Form').dispatchEvent(new Event('submit', {bubbles:true, cancelable:true}))" 
                            class="btn btn-outline-success d-none w-25">Kaydet</button>
                </div>
            </div>
            @if (editable){
                <div id="security-tab">
                    <h3 class="text-center mb-4 container-fluid">Güvenlik</h3>
                    @await Html.PartialAsync("Account/_SecurityPartial", new _SecurityPartial(){
                        ViewedUser = Model.CurrentUser
                    })
                </div>
                <div id="orders-tab">
                    <h3 hx-get="/@(nameof(Customer))?handler=orders&CustomerId=@(Model.ViewedCustomer.Id)" hx-trigger="revealed" hx-swap="afterend" hx-target="this" class="text-center container-fluid">Siparişler@(Model.CurrentCustomer != null ? "im" : "")</h3>
                </div>
            }
        </div>
    </div>
</div>