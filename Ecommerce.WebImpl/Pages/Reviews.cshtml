@page
@using Ecommerce.WebImpl.Pages.Shared.Review
@model Ecommerce.WebImpl.Pages.Reviews

@{
    ViewData["Title"] = "Değerlendirmeler ve Yorumlar";
}

<div class="container-fluid py-4">
    <style>
        .reviews-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border-radius: 20px;
            color: white;
            position: relative;
            overflow: hidden;
        }
        .reviews-header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
        }
        .content-card {
            background: white;
            border-radius: 20px;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.1);
            border: none;
            overflow: hidden;
        }
        .nav-pills .nav-link {
            border-radius: 12px;
            margin-right: 8px;
            transition: all 0.3s ease;
            border: none;
            font-weight: 500;
        }
        .nav-pills .nav-link:hover {
            background-color: rgba(102, 126, 234, 0.1);
            transform: translateY(-2px);
        }
        .nav-pills .nav-link.active {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);
        }
        .empty-state {
            text-align: center;
            padding: 4rem 2rem;
            color: #6c757d;
        }
        .empty-state i {
            font-size: 4rem;
            margin-bottom: 1rem;
            opacity: 0.5;
        }
        .stats-card {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            border-radius: 15px;
            padding: 1.5rem;
            text-align: center;
            border: none;
            transition: transform 0.3s ease;
        }
        .stats-card:hover {
            transform: translateY(-5px);
        }
    </style>

    <!-- Header Section -->
    <div class="reviews-header mb-4 position-relative">
        <div class="position-relative z-1 p-4">
            <div class="row align-items-center">
                <div class="col-md-8">
                    <div class="d-flex align-items-center">
                        <div class="bg-white bg-opacity-20 rounded-circle p-3 me-4">
                            <i class="bi bi-chat-square-text fs-2"></i>
                        </div>
                        <div>
                            <h1 class="mb-1 fw-bold">Değerlendirmeler ve Yorumlar</h1>
                            <p class="mb-0 opacity-75">Kullanıcı geri bildirimlerini görüntüleyin ve yönetin</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="row g-2">
                        <div class="col-6">
                            <div class="stats-card">
                                <i class="bi bi-star-fill text-warning fs-3"></i>
                                <div class="fw-bold">@Model.GottenReviews.Count</div>
                                <small>Değerlendirme</small>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="stats-card">
                                <i class="bi bi-chat-dots-fill text-info fs-3"></i>
                                <div class="fw-bold">@Model.Comments.Count</div>
                                <small>Yorum</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Main Content -->
    <div class="content-card">
        <div class="p-4">
            <!-- Navigation Tabs -->
            <ul class="nav nav-pills mb-4" id="reviewsTabs" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="nav-link @(Model.GottenReviews.Count > 0 && Model.Comments.Count == 0 ? "active" : Model.GottenReviews.Count > 0 ? "active" : "")" 
                            id="reviews-tab" data-bs-toggle="pill" data-bs-target="#reviews-content" type="button" role="tab">
                        <i class="bi bi-star me-2"></i>
                        Değerlendirmeler
                        @if (Model.GottenReviews.Count > 0) {
                            <span class="badge bg-light text-dark ms-2">@Model.GottenReviews.Count</span>
                        }
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link @(Model.Comments.Count > 0 && Model.GottenReviews.Count == 0 ? "active" : "")" 
                            id="comments-tab" data-bs-toggle="pill" data-bs-target="#comments-content" type="button" role="tab">
                        <i class="bi bi-chat-dots me-2"></i>
                        Yorumlar
                        @if (Model.Comments.Count > 0) {
                            <span class="badge bg-light text-dark ms-2">@Model.Comments.Count</span>
                        }
                    </button>
                </li>
            </ul>

            <!-- Tab Content -->
            <div class="tab-content" id="reviewsTabContent">
                <!-- Reviews Tab -->
                <div class="tab-pane fade @(Model.GottenReviews.Count > 0 && Model.Comments.Count == 0 ? "show active" : Model.GottenReviews.Count > 0 ? "show active" : "")" 
                     id="reviews-content" role="tabpanel">
                    @if (Model.GottenReviews.Count > 0) {
                        <div class="mb-3">
                            <h5 class="fw-semibold text-muted">
                                <i class="bi bi-star-fill text-warning me-2"></i>
                                Toplam @Model.GottenReviews.Count Değerlendirme
                            </h5>
                        </div>
                        @await Html.PartialAsync("Shared/Review/_ReviewsPartial", new _ReviewsPartial(){
                            Reviews = Model.GottenReviews,
                            CurrentUserId = Model.CurrentUser?.Id,
                            IsStaff = Model.CurrentStaff!=null,
                        })
                    } else {
                        <div class="empty-state">
                            <i class="bi bi-star"></i>
                            <h4>Henüz Değerlendirme Yok</h4>
                            <p class="text-muted">Ürünleriniz için henüz değerlendirme yapılmamış.</p>
                        </div>
                    }
                </div>

                <!-- Comments Tab -->
                <div class="tab-pane fade @(Model.Comments.Count > 0 && Model.GottenReviews.Count == 0 ? "show active" : "")" 
                     id="comments-content" role="tabpanel">
                    @if (Model.Comments.Count > 0) {
                        <div class="mb-3">
                            <h5 class="fw-semibold text-muted">
                                <i class="bi bi-chat-dots-fill text-info me-2"></i>
                                Toplam @Model.Comments.Count Yorum
                            </h5>
                        </div>
                        @await Html.PartialAsync("Shared/Review/_CommentsPartial", new _CommentsPartial(){
                            Comments = Model.Comments,
                            CurrentUserId = Model.CurrentUser?.Id,
                            IsStaff = Model.CurrentStaff!=null,
                        })
                    } else {
                        <div class="empty-state">
                            <i class="bi bi-chat-dots"></i>
                            <h4>Henüz Yorum Yok</h4>
                            <p class="text-muted">Değerlendirmeleriniz için henüz yorum yapılmamış.</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Initialize Bootstrap tabs
    var triggerTabList = [].slice.call(document.querySelectorAll('#reviewsTabs button'))
    triggerTabList.forEach(function (triggerEl) {
        var tabTrigger = new bootstrap.Tab(triggerEl)
        
        triggerEl.addEventListener('click', function (event) {
            event.preventDefault()
            tabTrigger.show()
        })
    })
});
</script>
